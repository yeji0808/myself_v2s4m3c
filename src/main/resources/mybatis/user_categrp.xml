<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<!-- dev.mvc.categrp.CategrpDAOInter 패키지에 등록된 interface 명시,
      패키지명과 인터페이스명은 실제로 존재해야함,
      Spring이 내부적으로 자동으로 interface를 구현해줌. -->
<mapper namespace="dev.mvc.user_categrp.CategrpDAOInter"> 
  <!-- 
  insert: INSERT SQL 실행
  id: Spring에서 호출시 사용
  parameterType: 전달받는 데이터 객체
  return: 등록한 레코드 갯수 리턴
  SQL선언시 ';'은 삭제
  #{}: ? 동일
  #{name}: public String getName(){...
   -->
   
   <insert id="create" parameterType="CategrpVO">
     INSERT INTO users(userno, user_name, user_cnt, seqno, visible)
     VALUES((SELECT NVL(MAX(userno), 0) + 1 as userno FROM users),
                #{user_name}, #{user_cnt}, #{seqno}, #{visible})
   </insert>
   
   <!-- 
   레코드 갯수 만큼 CategrpVO 객체를 만들어 ArrayList에 저장하여 리턴,
   List<CategrpVO> list = new ArrayList<CategrpVO>(); 
   -->
   <select id="list_categrpno_asc" resultType="CategrpVO">
     SELECT userno, user_name, user_cnt, seqno, visible
     FROM users
     ORDER BY userno ASC
   </select> 
   
   <!-- 조회, id: read, 입력: categrpno, 리턴: CategrpVO -->
   <select id="read" resultType="CategrpVO" parameterType="int">
     SELECT userno, user_name, user_cnt, seqno, visible
     FROM users
     WHERE userno = #{userno}
   </select> 

<!-- 수정, id: update, 입력: CategrpVO, 리턴: 수정된 갯수 int -->
   <update id="update" parameterType="CategrpVO">
     UPDATE users
     SET user_name=#{user_name}, user_cnt=#{user_cnt}, seqno=#{seqno}, visible=#{visible}
     WHERE userno = #{userno}
   </update>
   
   <!-- 삭제, id=delete, 입력: PK, 리턴: 삭제된 갯수 int -->
   <delete id="delete" parameterType="int">
     DELETE FROM users
     WHERE userno = #{userno}
   </delete>
</mapper>





